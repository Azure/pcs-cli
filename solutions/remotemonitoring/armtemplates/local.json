{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "solutionName": {
            "type": "string",
            "metadata": {
                "description": "The name of the solution"
            }
        },
        "solutionType": {
           "type": "string",
           "defaultValue": "RemoteMonitoringV2",
           "metadata": {
               "description": "The type of the solution"
           }
        },
        "storageName": {
            "type": "string",
            "defaultValue": "[concat('storage', take(uniqueString(subscription().subscriptionId, resourceGroup().id, parameters('solutionName')), 5))]",
            "metadata": {
                "description": "The name of the storageAccount"
            }
        },
        "storageSkuName": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS", "Standard_GRS", "Standard_RAGRS", "Standard_ZRS", "Premium_LRS"
            ],
            "metadata": {
                "description": "The storage SKU name"
            }
        },
        "documentDBName": {
            "type": "string",
            "defaultValue": "[concat('documentdb-', take(uniqueString(subscription().subscriptionId, resourceGroup().id, parameters('solutionName')), 5))]",
            "metadata": {
                "description": "The name of the documentDB"
            }
        },
        "docDBConsistencyLevel": {
            "type": "string",
            "allowedValues": [
                "Strong",
                "BoundedStaleness",
                "Session",
                "ConsistentPrefix",
                "Eventual"
            ],
            "defaultValue": "Strong",
            "metadata": {
                "description": "The documentDB deault consistency level for this account."
            }
        },
        "docDBMaxStalenessPrefix": {
            "type": "int",
            "minValue": 10,
            "maxValue": 1000,
            "defaultValue": 10,
            "metadata": {
                "description": "When documentDB consistencyLevel is set to BoundedStaleness, then this value is required, else it can be ignored."
            }
        },
        "docDBMaxIntervalInSeconds": {
            "type": "int",
            "minValue": 5,
            "maxValue": 600,
            "defaultValue": 5,
            "metadata": {
                "description": "When documentDB consistencyLevel is set to BoundedStaleness, then this value is required, else it can be ignored."
            }
        },
        "iotHubName": {
            "type": "string",
            "defaultValue": "[concat('iothub-', take(uniqueString(subscription().subscriptionId, resourceGroup().id, parameters('solutionName')), 5))]",
            "metadata": {
                "description": "The name of Azure IoT Hub"
            }
        },
        "iotHubSku": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "F1", "S1", "S2", "S3"
            ],
            "metadata": {
                "description": "The Azure IoT Hub SKU"
            }
        },
        "iotHubTier": {
            "type": "string",
            "defaultValue": "Standard",
            "allowedValues": [
                "Free", "Standard"
            ],
            "metadata": {
                "description": "The Azure IoT Hub tier"
            }
        }       
    },
    "variables": {
        "location": "[resourceGroup().location]",
        "documentDBApiVersion": "2016-03-19",
        "documentDBResourceId": "[resourceId('Microsoft.DocumentDb/databaseAccounts', parameters('documentDBName'))]",
        "iotHubApiVersion": "2017-01-19",
        "iotHubResourceId": "[resourceId('Microsoft.Devices/Iothubs', parameters('iotHubName'))]",
        "iotHubKeyName": "iothubowner",
        "iotHubKeyResource": "[resourceId('Microsoft.Devices/Iothubs/Iothubkeys', parameters('iotHubName'), variables('iotHubKeyName'))]",
        "storageApiVersion": "2017-06-01",
        "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts/',  parameters('storageName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageName')]",
            "apiVersion": "[variables('storageApiVersion')]",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageSkuName')]"
            }
        },
        {
            "comments": "Azure CosmosDb",
            "apiVersion": "[variables('documentDBApiVersion')]",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "name": "[parameters('documentDBName')]",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "properties": {
                "name": "[parameters('documentDBName')]",
                "databaseAccountOfferType": "standard",
                "consistencyPolicy": {
                    "defaultConsistencyLevel": "[parameters('docDBConsistencyLevel')]",
                    "maxStalenessPrefix": "[parameters('docDBMaxStalenessPrefix')]",
                    "maxIntervalInSeconds": "[parameters('docDBMaxIntervalInSeconds')]"
                }
            }
        },
        {
            "comments": "Azure IoT Hub",
            "apiVersion": "[variables('iotHubApiVersion')]",
            "type": "Microsoft.Devices/Iothubs",
            "name": "[parameters('iotHubName')]",
            "location": "[variables('location')]",
            "tags": {
                "IotSuiteType": "[parameters('solutionType')]"
            },
            "sku": {
                "name": "[parameters('iotHubSku')]",
                "tier": "[parameters('iotHubTier')]",
                "capacity": 1
            },
            "properties": {
                "location": "[variables('location')]"
            }
        }
    ],
    "outputs": {
        "resourceGroup" : {
            "type": "string",
            "value": "[resourceGroup().name]"
        },
        "iotHubConnectionString": {
            "type": "string",
            "value": "[concat('HostName=', reference(variables('iotHubResourceId')).hostName, ';SharedAccessKeyName=', variables('iotHubKeyName'), ';SharedAccessKey=', listkeys(variables('iotHubKeyResource'), variables('iotHubApiVersion')).primaryKey)]"
        },
        "documentDBConnectionString" : {
            "type": "string",
            "value": "[concat('AccountEndpoint=', reference(variables('documentDBResourceId')).documentEndpoint, ';AccountKey=', listkeys(variables('documentDBResourceId'), variables('documentDBApiVersion')).primaryMasterKey, ';')]"
        },
        "eventHubPartitions": {
            "type": "int",
            "value": "[reference(variables('iotHubResourceId')).eventHubEndpoints.events.partitionCount]"
        },
        "eventHubName": {
            "type": "string",
            "value": "[reference(variables('iotHubResourceId')).eventHubEndpoints.events.path]"
        },
        "eventHubEndpoint": {
            "type": "string",
            "value": "[reference(variables('iotHubResourceId')).eventHubEndpoints.events.endpoint]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageName')]"
        },
        "storageAccountKey": {
            "type": "string",
            "value": "[listKeys(variables('storageResourceId'), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value]"
        }
    }
}